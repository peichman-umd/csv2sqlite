#!/usr/bin/env python

import csv
import sqlite3
import sys
import argparse

parser = argparse.ArgumentParser()
parser.add_argument('DB_FILE')
args = parser.parse_args()

dbh = sqlite3.connect(args.DB_FILE)

cur = dbh.cursor()

# load the dialect options
dialect = {}
type_for = {
    'delimiter': str,
    'doublequote': bool,
    'escapechar': str,
    'lineterminator': str,
    'quotechar': str,
    'quoting': int,
    'skipinitialspace': bool,
    'strict': bool,
}
for (k, v) in cur.execute('select key, value from dialect'):
    key = str(k)
    if key in type_for.keys() and v is not None:
        dialect[key] = type_for[key](v)

csvout = csv.writer(sys.stdout, **dialect)

# recreate the header row
headers = []
columns = []
for (h, c) in cur.execute('select header, column from headers order by position'):
    headers.append(h)
    columns.append(c)

csvout.writerow(headers)
for row in dbh.execute('select ' + ', '.join(columns) + ' from data order by rowid'):
    csvout.writerow(row)
